@model BugTracker.Models.TicketComment

@{
    ViewBag.Title = "Edit";
}

<div class="container ">
    
        <div class="col-md-offset-3 col-md-6 tile p-15">
            <h2 class="center">Edit Comment</h2>

            <div class="col-md-10 p-15">

                @*@using (Html.BeginForm())*@
                @using (Html.BeginForm("Edit", "TicketComments", new { flag = ViewBag.UserIndexFlag }, FormMethod.Post))
            {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.Archived)
                        @Html.HiddenFor(model => model.Created)
                        @Html.HiddenFor(model => model.UserId)
                        @Html.HiddenFor(model => model.TicketId)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Ticket Title", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Ticket.Title, null, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.TicketTitle, disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.TicketId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Made by User", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.User.DisplayName, null, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.UserDisplayName, disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="col-md-12">

                @{
                    var userFlag = ViewBag.UserIndexFlag;
                    if (userFlag)
                    {
                        @Html.ActionLink("Back to List", "UserIndex", "TicketComments");
                    }
                    else
                    {
                        @Html.ActionLink("Back to List", "Index", "TicketComments");
                    }
                }
            </div>
            </div>
    </div>
            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
