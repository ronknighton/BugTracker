@model BugTracker.Models.TicketAttachment

@{
    ViewBag.Title = "Edit";
}

<div class="container ">
    <div class="col-md-offset-3 col-md-6 tile p-15">
        <h2 class="center">Edit Attachment</h2>
        <div class="col-md-10 p-15">


            @*@using (Html.BeginForm())*@
            @using (Html.BeginForm("Edit", "TicketAttachments", new { flag = ViewBag.UserIndexFlag }, FormMethod.Post, new { enctype = "Multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.MediaURL)
                    @Html.HiddenFor(model => model.Created)
                    @Html.HiddenFor(model => model.TicketId)
                    @Html.HiddenFor(model => model.Archived)
                    @Html.HiddenFor(model => model.UserId)

                    <div class="form-group">
                        @Html.LabelFor(model => model.MediaURL, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MediaURL, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.MediaURL, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group p-15">
                        @Html.Label("Change Attachment", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <input name="attachment" type="file" class="form-control" id="fileUpload" />
                            <h4 class="text-danger"> @TempData["FileError"]</h4>
                            @*@Html.ValidationMessageFor(model => model.FileUrl, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.User.DisplayName, null, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.UserDisplayName, disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Ticket Title", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Ticket.Title, null, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.TicketTitle, disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.TicketId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

            <div class="col-md-12">
                @{
                    var userFlag = ViewBag.UserIndexFlag;
                    if (userFlag)
                    {
                        @Html.ActionLink("Back to List", "UserIndex", "TicketAttachments");
                    }
                    else
                    {
                        @Html.ActionLink("Back to List", "Index", "TicketAttachments");
                    }
                }
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
